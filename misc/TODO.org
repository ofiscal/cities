* getting the data
https://www.chip.gov.co/schip_rt/index.jsf
** site behavior
*** clicks change HTML but not URL
After clicking in a menu, the URL is unchanged,
but, per diff --ignore-space-change,
the HTML (when saved) is almost entirely different.
*** drop-down menu contents are not in the HTML
e.g. what happens when you press "Down" within the "entidad" window.
The resulting menu must be served live from some server.
** site syntax
*** regions
**** are almost uniquely identified by 8|9 digit codes
Some valid 8-digit codes are subsets of valid 9-digit ones.
Will therefore need to find the best regex match to the name.
**** a nearly-comprehensive list of them
comes from Directorio_CHIP_Mesa_de_Ayuda_Contraloria_2009.xls
  (which Juan found)
A subset of it became data/regions/*.csv
Municipalities are those in which the first column is 21.
  That rule collects 9 false positives,
  all of which match one of these two regular expressions:
    ^DEFENSA CIVIL COLOMBIANA$
    ^CORPORACION.*
  They have been deleted.
Departments are those in which the first column is 11.
*** >< marks surround the text of items.
e.g. ">Informaci&#243;n de la Categoria<"
This is useful becuase some words, e.g. "Entidad", appear all over the place,
but only once between those carets.
** human click recipe
Main page
Consultas
Informes al Ciudadano
** automated scraping
*** "selenium" library for python
24K+ commits, last updated two days ago
**** modify Docker container
python3.6 -m pip install selenium
*** abstract strategy
**** TODO determine whether a submenu has loaded
http://allselenium.info/wait-for-elements-python-selenium-webdriver/
***** example
After choosing "Bogota",
a list of series will eventually become available.
**** Use "volver" to return almost to the main menu.
Going all the way back to the main menu would be slower.
**** Verify each dropdown menu has what's expected.
***** Upon asking for a city, it should have length one.
***** For some "categorias", one must choose a "formulario"
****** the problem
 "gastos de inversion" offers only one "formulario", itself.
 "gastos funcionamiento" offers two "formulario" choices:
   "gastos funcionamiento"
   "transferencias comprometidas"
 "indicadores de calidad" offers only one, itself.
 "ingresos" offers two:
   "reporte informacion"
   "transferencias recibidas"
****** TODO awaiting response from Juan
**** restart once the downloaded file is detected
**** TODO timeout slow operations, to repeat later
Save the elements of every timed-out request to a list.
Or, more natural, bump them to the end of the queue --
if I can figure out how to parallellize that.
*** DONE "mechanize" library for python
http://wwwsearch.sourceforge.net/mechanize/
**** looks inappropriate
http://wwwsearch.sourceforge.net/mechanize/faq.html
"this is a library for web automation, not an interactive browser"
**** untouched since 2017
**** would have to modify Docker container
RUN easy_install mechanize
**** recommended here; seems appropriate for a .jsf form
https://stackoverflow.com/questions/49591740/how-to-do-a-web-scrap-in-an-jsf-site-with-cookies-and-javascript-javax-faces-v
** TODO fuzzy string match
Probably the best candidate:
  from fuzzywuzzy import process
There are othersm, too; see this tutorial:
https://www.datacamp.com/community/tutorials/fuzzy-string-python
Functions mentioned later in the tutorial are more powerful
(and maybe faster too?).
* PITFALLS interpreting the data
Some series might not be uniformly sampled across time.
* drawing
** TODO get drawStacks() to respect outer subplots
 rework this line:
   fig, (ax) = plt.subplots()
** Emulate the graph on p.2 of the mockup pdf.
*** *???* If boxes are too small to fit a number, aggregate somehow.
*** DONE Stack the boxes, with a line and no space between.
*** legend : draw to the side, not on top of graph
*** Write the total above each stack.
*** Color the boxes per Manuela's specs.
*** DONE Put text indicating the amount on each box.
 "By default, [the x and y arguments to matplotlib.axes.Axes.text() are] in data coordinates."
 https://matplotlib.org/3.1.0/api/_as_gen/matplotlib.axes.Axes.text.html
*** DONE No y-axis. Years on the x-axis.
*** DONE Big space between each column.
*** Change fonts
 refer to fonts/custom-font.py for
**** color: white
**** style: Montserrat black & Montserrat light
 source code: https://github.com/JulietaUla/Montserrat
 main page: https://fonts.google.com/specimen/Montserrat
*** Include text from an accompanying .txt file.
** TODO build a pdf
*** TODO use matplotlib
*** DONE reportlab is too complex and unfree
 pip3 install reportlab
**** DONE ReportLab
 https://www.reportlab.com/documentation/
**** custom fonts in reportlab
 https://www.reportlab.com/documentation/faq/#2.6.2
*** DONE pyfpdf appears to badly support Python 3
 pip install --upgrade pip # afte running this, did not have pip3
 seems to be working: "python3 -m pip install fpdf"
 recommended was      "python  -m pip install fpdf"
** wish: that I could set font only once, affecting all types of text
* gotchas
** underscores in filenames seem to confuse Matplotlib's font_manager
https://github.com/matplotlib/matplotlib/issues/14536
** local modules must begin with a capital letter to be imported in Jupyter
Keeping all code in a top-level folder that starts with a capital letter solves this problem. Subfolders and files suffer no naming restriction.
** every code folder needs a __init__.py file
as of some recent version of Python
** change every background color: methods that didn't work
*** plt.rcParams['axes.facecolor] = 'b'
Changes the legend background, nothing else
*** ax.set_facecolor('b')
no discernible effect
*** ax.patch.set_facecolor('b')
no discernible effect
*** fig.add_subplot(2, 1, 1, facecolor = "red")
causes the second figure not to be drawn,
no other discernible effect
**** code example
   fig = Figure()

   ax = fig.add_subplot(2, 1, 1, facecolor = "red")
   drawText( ax, lines )
*** pdf.savefig() overrides background color in figures
https://stackoverflow.com/questions/56606122/matplotlib-use-the-same-custom-font-in-every-kind-of-text-axes-title-text
